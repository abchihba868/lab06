name: Build and Package
on:
  push:
    tags: ['v*']
  pull_request: {}

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake dpkg-dev rpm
        
    - name: Install Windows dependencies
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
        choco install wixtoolset -y
        Add-Content $env:GITHUB_ENV "WIX=C:\Program Files (x86)\WiX Toolset v3.11\bin"
        
    - name: Prepare license for Windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        if (!(Test-Path "LICENSE.rtf")) {
            " " | Out-File -Encoding ASCII "LICENSE.rtf"
        }
      
    - name: Install macOS dependencies
      if: matrix.os == 'macos-latest'
      run: brew install cmake
        
    - name: Configure and Build
      shell: bash
      run: |
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release
        
    - name: Create Linux Packages
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: |
        cd build
        cpack -G TGZ
        cpack -G DEB
        cpack -G RPM
        
    - name: Create Windows Package
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        cd build
        cpack -G WIX -C Release
        
    - name: Create macOS Package
      if: matrix.os == 'macos-latest'
      shell: bash
      run: |
        cd build
        cpack -G DragNDrop
        
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Packages-${{ matrix.os }}
        path: |
          build/*.deb
          build/*.rpm
          build/*.tar.gz
          build/*.msi
          build/*.dmg
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/*.deb
          build/*.rpm
          build/*.tar.gz
          build/*.msi
          build/*.dmg
